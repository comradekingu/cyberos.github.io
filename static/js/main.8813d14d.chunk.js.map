{"version":3,"sources":["ThemeMode.js","Translations.js","images/cyber-logo.svg","Heading.js","Footer.js","images/preview_light.png","images/preview_dark.png","Website.js","index.js"],"names":["isDarkMode","window","matchMedia","matches","translations","de","en_US","es_MX","pl","pt_BR","ru","zh_Hans","zh_Hant_HK","zh_Hant","getLanguage","navigator","language","getLanguageKey","key","rootKey","website","output","Heading","className","src","CyberLogo","React","Component","Footer","wipDisclaimerHTML","replace","widgetSrc","href","dangerouslySetInnerHTML","__html","Website","previewImage","PreviewImageDark","PreviewImageLight","ReactDOM","render","StrictMode","document","querySelector","body","classList","add","lang"],"mappings":"qwEAIO,SAASA,IACd,OAAOC,OAAOC,WAAW,gCAAgCC,Q,0ECKvDC,EAAe,CACjBC,GAAIA,EACJ,QAASC,EACT,QAASC,EACTC,GAAIA,EACJ,QAASC,EACTC,GAAIA,EACJ,GAAMC,EACN,QAASA,EACT,QAASC,EACT,QAASC,GAGJ,SAASC,IACd,OAAOC,UAAUC,YAAYZ,EAAeW,UAAUC,SAAW,QAGpD,SAASC,EAAeC,GACrC,IAEIC,EAFSf,EAAaU,KAEPM,QACdD,IAASA,EAAUb,EAAMc,SAE9B,IAAIC,EAASF,EAAQD,GAGrB,OAFKG,IAAQA,EAASf,EAAMc,QAAQF,IAE7BG,E,gCCpCM,G,MAAA,IAA0B,wC,OCIpBC,E,4JACnB,WACE,OACE,qBAAKC,UAAU,iBAAf,SACE,qBAAIA,UAAU,sBAAd,UACE,qBAAKA,UAAU,oBAAoBC,IAAKC,IAD1C,mB,GAJ6BC,IAAMC,WCCtBC,G,kKACnB,WACE,IAAIC,EAAoBZ,EAAe,iBACpCa,QAAQ,IAAK,2DACbA,QAAQ,IAAK,QACZC,EAAS,8DACX/B,IAAe,QAAU,QADd,QAGb,OACE,qBAAKuB,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,4BACE,mBAAGS,KAAK,6CAAR,SACE,qBAAKR,IAAKO,QAGd,4BAAId,EAAe,qBACnB,mBAAGgB,wBAAyB,CAAEC,OAAQL,c,GAjBZH,IAAMC,YCL3B,MAA0B,0CCA1B,MAA0B,yCCQpBQ,E,4JACnB,WACE,IAAIC,EAAepC,IAAeqC,EAAmBC,EACrD,OACE,sBAAKf,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,kBAAf,SACE,mCACE,6BAAKN,EAAe,gBACpB,sBAAKM,UAAU,mBAAf,UACE,mBAAGA,UAAU,SAASS,KAAK,sCAA3B,SACGf,EAAe,cAElB,mBAAGM,UAAU,SAASS,KAAK,6BAA3B,uBAIF,qBAAKT,UAAU,0BAAf,SACE,mBAAGS,KAAMI,EAAT,SACE,qBAAKb,UAAU,gBAAgBC,IAAKY,aAK5C,cAAC,EAAD,W,GAxB6BV,IAAMC,WCD3CY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,UAGzBD,SAASE,KAAKC,UAAUC,IAAxB,URbS9C,IAAe,OAAS,QQajC,UACA0C,SAASC,cAAc,QAAQI,KAAOjC,M","file":"static/js/main.8813d14d.chunk.js","sourcesContent":["export function getThemeMode() {\n  return isDarkMode() ? \"dark\" : \"light\";\n}\n\nexport function isDarkMode() {\n  return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\n","import de from \"./translations/de.json\";\nimport en_US from \"./translations/en-US.json\";\nimport es_MX from \"./translations/es-MX.json\";\nimport pl from \"./translations/pl.json\";\nimport pt_BR from \"./translations/pt-BR.json\";\nimport ru from \"./translations/ru.json\";\nimport zh_Hans from \"./translations/zh-Hans.json\";\nimport zh_Hant_HK from \"./translations/zh-Hant-HK.json\";\nimport zh_Hant from \"./translations/zh-Hant.json\";\n\nlet translations = {\n  de: de,\n  \"en-US\": en_US,\n  \"es-MX\": es_MX,\n  pl: pl,\n  \"pt-BR\": pt_BR,\n  ru: ru,\n  \"zh\": zh_Hans,\n  \"zh-CN\": zh_Hans,\n  \"zh-HK\": zh_Hant_HK,\n  \"zh-TW\": zh_Hant,\n};\n\nexport function getLanguage() {\n  return navigator.language in translations ? navigator.language : \"en-US\";\n}\n\nexport default function getLanguageKey(key) {\n  const keys = translations[getLanguage()];\n\n  let rootKey = keys.website;\n  if (!rootKey) rootKey = en_US.website;\n\n  let output = rootKey[key];\n  if (!output) output = en_US.website[key];\n\n  return output;\n}\n","export default __webpack_public_path__ + \"static/media/cyber-logo.ad899d8c.svg\";","import React from \"react\";\nimport \"./heading.css\";\nimport CyberLogo from \"./images/cyber-logo.svg\";\n\nexport default class Heading extends React.Component {\n  render() {\n    return (\n      <div className=\"website-header\">\n        <h1 className=\"website-header-text\">\n          <img className=\"header-cyber-logo\" src={CyberLogo} />\n          CyberOS\n        </h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport getLanguageKey from \"./Translations\";\nimport { isDarkMode } from \"./ThemeMode\";\nimport \"./footer.css\";\n\nexport default class Footer extends React.Component {\n  render() {\n    let wipDisclaimerHTML = getLanguageKey(\"wipDisclaimer\")\n      .replace(\"[\", '<a href=\"https://github.com/cyberos/cyberos.github.io\">')\n      .replace(\"]\", \"</a>\");\n    let widgetSrc = `https://hosted.weblate.org/widgets/cyberos/-/287x66-${\n      isDarkMode() ? \"black\" : \"white\"\n    }.png`;\n    return (\n      <div className=\"footer-container\">\n        <div className=\"footer-content\">\n          <p>\n            <a href=\"https://hosted.weblate.org/engage/cyberos/\">\n              <img src={widgetSrc} />\n            </a>\n          </p>\n          <p>{getLanguageKey(\"footerCopyright\")}</p>\n          <p dangerouslySetInnerHTML={{ __html: wipDisclaimerHTML }}></p>\n        </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/preview_light.999b5c52.png\";","export default __webpack_public_path__ + \"static/media/preview_dark.9244a69a.png\";","import React from \"react\";\nimport Heading from \"./Heading\";\nimport Footer from \"./Footer\";\nimport getLanguageKey from \"./Translations\";\nimport { isDarkMode } from \"./ThemeMode\";\nimport PreviewImageLight from \"./images/preview_light.png\";\nimport PreviewImageDark from \"./images/preview_dark.png\";\n\nexport default class Website extends React.Component {\n  render() {\n    let previewImage = isDarkMode() ? PreviewImageDark : PreviewImageLight;\n    return (\n      <div className=\"website-root\">\n        <Heading />\n        <div className=\"website-content\">\n          <center>\n            <h1>{getLanguageKey(\"introQuote\")}</h1>\n            <div className=\"button-container\">\n              <a className=\"button\" href=\"https://dir.omame.tech/cyberos-iso/\">\n                {getLanguageKey(\"download\")}\n              </a>\n              <a className=\"button\" href=\"https://github.com/cyberos\">\n                GitHub\n              </a>\n            </div>\n            <div className=\"preview-image-container\">\n              <a href={previewImage}>\n                <img className=\"preview-image\" src={previewImage}></img>\n              </a>\n            </div>\n          </center>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { getThemeMode } from \"./ThemeMode\";\nimport { getLanguage } from \"./Translations\";\nimport Website from \"./Website\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Website />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\ndocument.body.classList.add(`${getThemeMode()}-mode`);\ndocument.querySelector('html').lang = getLanguage();\n"],"sourceRoot":""}